@Composable
fun PumpControl() {
    var isPumpOn by remember { mutableStateOf(false) }
    val context = LocalContext.current

    Column(
        modifier = Modifier
            .padding(16.dp)
            .fillMaxWidth(),
        horizontalAlignment = Alignment.CenterHorizontally
    ) {
        Text(
            text = "Controle da Bomba Hidráulica",
            fontSize = 20.sp,
            modifier = Modifier.padding(bottom = 16.dp)
        )

        Button(
            onClick = { isPumpOn = !isPumpOn },
            modifier = Modifier
                .padding(vertical = 8.dp)
                .width(200.dp),
            colors = ButtonDefaults.buttonColors(
                backgroundColor = if (isPumpOn) Color.Red else Color.Green
            ),
            shape = RoundedCornerShape(8.dp)
        ) {
            ButtonContent(isPumpOn)
        }

        Text(
            text = if (isPumpOn) "A bomba está ligada" else "A bomba está desligada",
            fontSize = 16.sp,
            modifier = Modifier.padding(vertical = 8.dp)
        )
    }
}

@Composable
private fun ButtonContent(isPumpOn: Boolean) {
    Row(verticalAlignment = Alignment.CenterVertically) {
        Icon(
            imageVector = if (isPumpOn) Icons.Default.PowerOff else Icons.Default.Power,
            contentDescription = null,
            modifier = Modifier.size(24.dp)
        )
        Spacer(modifier = Modifier.width(8.dp))
        Text(
            text = if (isPumpOn) "Desligar Bomba" else "Ligar Bomba",
            fontSize = 16.sp
        )
    }
}